Assignment name: bigint
Expected files: bigint.hpp, bigint.cpp

A bignumber is an object representing an arbitrary precision number. This is useful when you 
want to store a number bigger than SIZE_MAX without any loss of precision. This can be archieved 
by storing a string or an array, containing parts of the number. 
Create a class bigint that will store arbitrary precision unsigned integers and where addition, increment, comparisions 
and bitshifts are defined, where bitshift should shift with respect to the decimal basis (e.g. 43 << 3 == 43000).
Your bigint must be printable with the << operator (in base 10) and the output should not contain any leading zeros.
You will find a main in this directory that must work with your class.

🃏 : In my code u will find the implementationof substraction "operator-" even the the subject doesn't mention it...
	 Cs Grademe does a dummy test :
	 		bigint c(43);
			std::cout << c - c << std::endl;
	So just return bigint(0) manually in all cases.
 